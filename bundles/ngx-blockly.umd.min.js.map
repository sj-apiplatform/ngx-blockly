{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-blockly/lib/ngx-blockly/ngx-blockly.config.ts","ng://ngx-blockly/lib/ngx-blockly/ngx-blockly-generator.config.ts","ng://ngx-blockly/lib/ngx-blockly/ngx-blockly.component.ts","ng://ngx-blockly/lib/ngx-blockly/models/block.ts","ng://ngx-blockly/lib/ngx-blockly/models/custom-block.ts","ng://ngx-blockly/lib/ngx-blockly/models/xml-block.ts","ng://ngx-blockly/lib/ngx-blockly/models/category.ts","ng://ngx-blockly/lib/ngx-blockly/models/separator.ts","ng://ngx-blockly/lib/ngx-blockly/models/block-mutator.ts","ng://ngx-blockly/lib/ngx-blockly/services/ngx-toolbox-builder.service.ts","ng://ngx-blockly/lib/ngx-blockly.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","NgxBlocklyConfig","NgxBlocklyGeneratorConfig","NgxBlocklyComponent","config","generatorConfig","customBlocks","workspaceChange","EventEmitter","dartCode","javascriptCode","luaCode","phpCode","pythonCode","xmlCode","ngOnInit","customBlock","Blockly","Blocks","type","init","block","_a","class","bind","apply","arguments","concat","__spread","blockMutator","args","mixin","blockInstance","Python","toPythonCode","Dart","toDartCode","JavaScript","toJavaScriptCode","Lua","toLuaCode","PHP","toPHPCode","mutator_mixin","mutationToDom","domToMutation","xmlElement","blockList","decompose","workspace","compose","topBlock","saveConnections","containerBlock","Extensions","unregister","name","registerMutator","afterBlockInit","_b","tslib_1.__values","_c","ngAfterViewInit","_init","onResize","event","_this","setTimeout","resize","ngOnChanges","changes","firstChange","workspaceToCode","workspaceId","dart","emit","Workspace","getById","javascript","lua","php","python","xml","Xml","domToPrettyText","workspaceToDom","toXml","fromXml","clearWorkspaceAndLoadFromXml","textToDom","appendFromXml","appendDomToWorkspace","svgResize","dispose","inject","addChangeListener","$event","_onWorkspaceChange","Component","selector","template","Input","Output","HostListener","Block","_type","defineProperty","_class","CustomBlock","_i","_super","_block","_blockMutator","_args","tslib_1.__extends","defineBlock","setOnChange","onChange","changeEvent","toXML","XmlBlock","_values","_field","values","field","Value","shadow","_name","_shadow","Field","_value","Category","colour","blocks","categories","custom","style","_colour","_blocks","_categories","_custom","_style","undefined","_d","_e","_f","Separator","BlockMutator","_blockList","LOGIC_CATEGORY","LOOP_CATEGORY","MATH_CATEGORY","TEXT_CATEGORY","LISTS_CATEGORY","COLOUR_CATEGORY","VARIABLES_CATEGORY","FUNCTIONS_CATEGORY","NgxToolboxBuilderService","build","_nodes","Injectable","NgxBlocklyModule","NgModule","declarations","imports","exports","providers","schemas","NO_ERRORS_SCHEMA"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class NgxBlocklyConfig {\n    collapse?: boolean; // Allows blocks to be collapsed or expanded. Defaults to true if the toolbox has categories, false otherwise.\n    comments?: boolean; // Allows blocks to have comments. Defaults to true if the toolbox has categories, false otherwise.\n    css?: boolean; // If false, don't inject CSS (providing CSS becomes the document's responsibility). Defaults to true.\n    disable?: boolean; // If false, don't inject CSS (providing CSS becomes the document's responsibility). Defaults to true.\n    grid?: {\n        spacing: number,\n        length: number,\n        colour: string,\n        snap: boolean\n    };\n    horizontalLayout?: boolean; // If true toolbox is horizontal, if false toolbox is vertical. Defaults to false.\n    maxBlocks?: number; // \tMaximum number of blocks that may be created. Useful for student exercises. Defaults to Infinity.\n    maxInstances?: object; // Map from block types to maximum number of blocks of that type that may be created. Undeclared types default to Infinity.\n    media?: string; // Path from page (or frame) to the Blockly media directory. Defaults to \"https://blockly-demo.appspot.com/static/media/\"\n    oneBasedIndex?: boolean; // If true list and string operations should index from 1, if false index from 0. Defaults to true.\n    readOnly?: boolean; // If true, prevent the user from editing. Supresses the toolbox and trashcan. Defaults to false.\n    rtl?: boolean; // If true, mirror the editor (for Arabic or Hebrew locales). Defaults to false.\n    scrollbars?: boolean; // Sets whether the workspace is scrollable or not. Defaults to true if the toolbox has categories, false otherwise\n    sounds?: boolean; // If false, don't play sounds (e.g. click and delete). Defaults to true.\n    theme?: any; // Defaults to classic theme if no theme is provided. (https://developers.google.com/blockly/guides/configure/web/themes)\n    toolbox?: string; // Tree structure of categories and blocks available to the user\n    toolboxPosition?: string; // If \"start\" toolbox is on top (if horizontal) or left (if vertical and LTR) or right (if vertical and RTL). If \"end\" toolbox is on opposite side. Defaults to \"start\".\n    trashcan?: boolean; // Displays or hides the trashcan. Defaults to true if the toolbox has categories, false otherwise.\n    maxTrashcanContents?: number; // Maximum number of deleted items that will appear in the trashcan flyout. '0' disables the feature. Defaults to '32'.\n    zoom?: {\n        controls: boolean,\n        wheel: boolean,\n        startScale: number,\n        maxScale: number,\n        minScale: number,\n        scaleSpeed: number\n    };\n\n}\n","export class NgxBlocklyGeneratorConfig {\n    dart?: boolean;\n    javascript?: boolean;\n    lua?: boolean;\n    php?: boolean;\n    python?: boolean;\n    xml?: boolean;\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnInit, Output, OnChanges, SimpleChange } from '@angular/core';\nimport { NgxBlocklyConfig } from './ngx-blockly.config';\nimport { NgxBlocklyGeneratorConfig } from './ngx-blockly-generator.config';\nimport { CustomBlock } from './models/custom-block';\n\ndeclare var Blockly: any;\n\n@Component({\n    selector: 'ngx-blockly',\n    templateUrl: './ngx-blockly.component.html',\n    styleUrls: ['./ngx-blockly.component.css']\n})\nexport class NgxBlocklyComponent implements OnInit, AfterViewInit, OnChanges {\n\n    @Input() public config: NgxBlocklyConfig = {};\n    @Input() public generatorConfig: NgxBlocklyGeneratorConfig = {};\n    @Input() public customBlocks: CustomBlock[] = [];\n    @Output() public workspaceChange: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public dartCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public javascriptCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public luaCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public phpCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public pythonCode: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public xmlCode: EventEmitter<string> = new EventEmitter<string>();\n\n    public workspace: any;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.customBlocks) {\n            for (const customBlock of this.customBlocks) {\n                Blockly.Blocks[customBlock.type] = {\n                    init: function () {\n                        const block = new customBlock.class(customBlock.type, this, customBlock.blockMutator, ...customBlock.args);\n                        block.init(this);\n                        this.mixin({\n                                blockInstance: block\n                            }\n                        );\n                    }\n                };\n                if (typeof Blockly.Python !== 'undefined') {\n                    Blockly.Python[customBlock.type] = function (b) {\n                        return b.blockInstance.toPythonCode(b);\n                    };\n                }\n                if (typeof Blockly.Dart !== 'undefined') {\n                    Blockly.Dart[customBlock.type] = function (b) {\n                        return b.blockInstance.toDartCode(b);\n                    };\n                }\n                if (typeof Blockly.JavaScript !== 'undefined') {\n                    Blockly.JavaScript[customBlock.type] = function (b) {\n                        return b.blockInstance.toJavaScriptCode(b);\n                    };\n                }\n                if (typeof Blockly.Lua !== 'undefined') {\n                    Blockly.Lua[customBlock.type] = function (b) {\n                        return b.blockInstance.toLuaCode(b);\n                    };\n                }\n                if (typeof Blockly.PHP !== 'undefined') {\n                    Blockly.PHP[customBlock.type] = function (b) {\n                        return b.blockInstance.toPHPCode(b);\n                    };\n                }\n                if (customBlock.blockMutator) {\n                    const mutator_mixin: any = {\n                        mutationToDom: function () {\n                            return customBlock.blockMutator.mutationToDom.call(customBlock.blockMutator, this);\n                        },\n                        domToMutation: function (xmlElement: any) {\n                            customBlock.blockMutator.domToMutation.call(customBlock.blockMutator, this, xmlElement);\n                        }\n                    };\n                    if (customBlock.blockMutator.blockList && customBlock.blockMutator.blockList.length > 0) {\n                        mutator_mixin.decompose = function(workspace: any) {\n                            return customBlock.blockMutator.decompose.call(customBlock.blockMutator, this, workspace);\n                        };\n                        mutator_mixin.compose = function(topBlock: any) {\n                            customBlock.blockMutator.compose.call(customBlock.blockMutator, this, topBlock);\n                        };\n                        mutator_mixin.saveConnections = function(containerBlock: any) {\n                            customBlock.blockMutator.saveConnections.call(customBlock.blockMutator, this, containerBlock);\n                        };\n                    }\n                    Blockly.Extensions.unregister(customBlock.blockMutator.name);\n                    Blockly.Extensions.registerMutator(\n                        customBlock.blockMutator.name,\n                        mutator_mixin,\n                        function() {\n                            customBlock.blockMutator.afterBlockInit.call(customBlock.blockMutator, this);\n                        },\n                        customBlock.blockMutator.blockList\n                    );\n                }\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n       this._init();\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        setTimeout(() => this.resize(), 200);\n    }\n\n    ngOnChanges(changes: {[propKey: string]: SimpleChange}) {\n        if (changes.config && !changes.config.firstChange) {\n            this._init();\n        }\n    }\n\n    public workspaceToCode(workspaceId: string) {\n        if (this.generatorConfig.dart) {\n           this.dartCode.emit(Blockly.Dart.workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n        }\n        if (this.generatorConfig.javascript) {\n            this.javascriptCode.emit(Blockly.JavaScript.workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n        }\n        if (this.generatorConfig.lua) {\n            this.luaCode.emit(Blockly.Lua.workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n        }\n        if (this.generatorConfig.php) {\n            this.phpCode.emit(Blockly.PHP.workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n        }\n        if (this.generatorConfig.python) {\n            this.pythonCode.emit(Blockly.Python.workspaceToCode(Blockly.Workspace.getById(workspaceId)));\n        }\n        if (this.generatorConfig.xml) {\n            this.xmlCode.emit(Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(Blockly.Workspace.getById(workspaceId))));\n        }\n    }\n\n    public toXml(): string {\n        return Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(this.workspace));\n    }\n\n    public fromXml(xml: string) {\n        Blockly.Xml.clearWorkspaceAndLoadFromXml(Blockly.Xml.textToDom(xml), this.workspace);\n    }\n\n    public appendFromXml(xml: string) {\n        Blockly.Xml.appendDomToWorkspace(Blockly.Xml.textToDom(xml), this.workspace);\n    }\n\n    protected resize() {\n        Blockly.svgResize(this.workspace);\n    }\n\n    private _init() {\n        let xml: string;\n        if (this.workspace) {\n            xml = this.toXml();\n            this.workspace.dispose();\n        }\n        this.workspace = Blockly.inject('blockly', this.config);\n        this.workspace.addChangeListener(($event) => {\n            this._onWorkspaceChange($event);\n        });\n        if (xml) {\n            this.fromXml(xml);\n        }\n        this.resize();\n    }\n\n    private _onWorkspaceChange($event: any) {\n        this.workspaceChange.emit($event);\n        this.workspaceToCode($event.workspaceId);\n    }\n}\n","export abstract class Block {\n\n    private _type: string;\n    private _class: any;\n\n    constructor(type: string) {\n        this._type = type;\n    }\n\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value;\n    }\n\n    get class(): any {\n        return this._class;\n    }\n\n    set class(value: any) {\n        this._class = value;\n    }\n\n    public abstract toXML();\n}\n","import { BlockMutator } from './block-mutator';\nimport { Block } from './block';\n\ndeclare var Blockly: any;\n\nexport abstract class CustomBlock extends Block {\n\n    private _block: any;\n    private _blockMutator: BlockMutator;\n    private _args: any[];\n\n\n    constructor(type: string, block: any, blockMutator: BlockMutator, ...args: any[]) {\n        super(type);\n        this._block = block;\n        this._blockMutator = blockMutator;\n        this._args = args;\n    }\n\n    public init(block: any) {\n        this._block = block;\n        this.defineBlock();\n        this.block.setOnChange(function (event) {\n            this.blockInstance.onChange(event);\n        });\n    }\n\n    public abstract defineBlock();\n\n    public onChange(changeEvent: any) {\n        // nothing to do\n    }\n\n    public toXML(): string {\n        return `<block type=\"${this.type}\"></block>`;\n    }\n\n    public toDartCode(block: CustomBlock): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toJavaScriptCode(block: CustomBlock): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toLuaCode(block: CustomBlock): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toPHPCode(block: CustomBlock): string | any[] {\n        return 'Not implemented';\n    }\n\n    public toPythonCode(block: CustomBlock): string | any[] {\n        return 'Not implemented';\n    }\n\n    get block() {\n        return this._block;\n    }\n\n    set block(value) {\n        this._block = value;\n    }\n\n    get blockMutator(): BlockMutator {\n        return this._blockMutator;\n    }\n\n    set blockMutator(value: BlockMutator) {\n        this._blockMutator = value;\n    }\n\n    get args(): any[] {\n        return this._args;\n    }\n\n    set args(value: any[]) {\n        this._args = value;\n    }\n}\n","import { Block } from './block';\n\nexport class XmlBlock extends Block {\n\n    private _values: Value[] = [];\n    private _field: Field;\n\n    constructor(type: string) {\n        super(type);\n    }\n\n    get values(): Value[] {\n        return this._values;\n    }\n\n    set values(value: Value[]) {\n        this._values = value;\n    }\n\n    get field(): Field {\n        return this._field;\n    }\n\n    set field(value: Field) {\n        this._field = value;\n    }\n\n    public toXML(): string {\n        let xml = `<block type=\"${this.type}\">`;\n\n        for (const value of this.values) {\n            xml += value.toXML();\n        }\n        xml += this.field ? this.field.toXML() : '';\n        xml += '</block>';\n        return xml;\n    }\n}\n\nexport class Value {\n    private _name: string;\n    private _shadow: XmlBlock;\n    private _block: XmlBlock;\n\n    constructor(name: string, shadow: XmlBlock, block: XmlBlock) {\n        this._name = name;\n        this._shadow = shadow;\n        this._block = block;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get shadow(): XmlBlock {\n        return this._shadow;\n    }\n\n    set shadow(value: XmlBlock) {\n        this._shadow = value;\n    }\n\n    get block(): XmlBlock {\n        return this._block;\n    }\n\n    set block(value: XmlBlock) {\n        this._block = value;\n    }\n\n    public toXML(): string {\n        return `<value name=\"${this.name}\">` +\n        this.block ? this.block.toXML() : '' +\n        this.shadow ? this.shadow.toXML() : '' +\n            '</value>';\n    }\n}\n\nexport class Field {\n    private _name: string;\n    private _value: string;\n\n    constructor(name: string, value: string) {\n        this._name = name;\n        this._value = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        this._value = value;\n    }\n\n    public toXML(): string {\n        return `<field name=\"${this.name}\">` + this.value + '</field>';\n    }\n}\n","import { Block } from './block';\nimport { Node } from './node';\n\nexport class Category implements Node {\n\n    private _blocks: Block[];\n    private _categories: Category[];\n    private _colour: string;\n    private _name: string;\n    private _custom: string;\n    private _style: string;\n\n    constructor(name: string,\n                colour: string,\n                blocks?: Block[],\n                categories?: Category[],\n                custom?: string,\n                style?: string) {\n        this._name = name;\n        this._colour = colour;\n        this._blocks = blocks ? blocks : [];\n        this._categories = categories ? categories : [];\n        this._custom = custom;\n        this._style = style;\n    }\n\n    get blocks(): Block[] {\n        return this._blocks;\n    }\n\n    set blocks(value: Block[]) {\n        this._blocks = value;\n    }\n\n    get categories(): Category[] {\n        return this._categories;\n    }\n\n    set categories(value: Category[]) {\n        this._categories = value;\n    }\n\n    get colour(): string {\n        return this._colour;\n    }\n\n    set colour(value: string) {\n        this._colour = value;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get custom(): string {\n        return this._custom;\n    }\n\n    set custom(value: string) {\n        this._custom = value;\n    }\n\n    get style(): string {\n        return this._style;\n    }\n\n    set style(value: string) {\n        this._style = value;\n    }\n\n    public toXML(): string {\n        let xml = `<category name=\"${this._name}\" `;\n\n        if (this.style === undefined) {\n            xml += `colour=\"${this._colour}\" `;\n        } else {\n            xml += `categorystyle=\"${this._style}\" `;\n        }\n\n        xml += this.custom ? ` custom=\"${this._custom}\">` : '>';\n\n        for (const category of this._categories) {\n            xml += category.toXML();\n        }\n\n        for (const block of this._blocks) {\n            xml += block.toXML();\n        }\n        xml += '</category>';\n\n        return xml;\n    }\n}\n","import { Node } from './node';\n\nexport class Separator implements Node {\n    public toXML(): string {\n        return '<sep></sep>';\n    }\n}\n","\nexport abstract class BlockMutator {\n\n    private _name: string;\n    private _blockList: string[];\n\n    constructor(name: string, blockList: string[] = null) {\n        this._name = name;\n        this._blockList = blockList;\n    }\n\n    public abstract mutationToDom(block: any);\n\n    public abstract domToMutation(block: any, xmlElement: any);\n\n    public abstract decompose(block: any, workspace: any);\n\n    public abstract compose(block: any, topBlock: any);\n\n    public abstract saveConnections(block: any, containerBlock: any);\n\n    public abstract afterBlockInit(block: any);\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get blockList(): string[] {\n        return this._blockList;\n    }\n\n    set blockList(value: string[]) {\n        this._blockList = value;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Category } from '../models/category';\nimport { XmlBlock } from '../models/xml-block';\nimport { Node } from '../models/node';\n\nexport const LOGIC_CATEGORY: Category = new Category('Logic', '%{BKY_LOGIC_HUE}', [\n    new XmlBlock('controls_if'),\n    new XmlBlock('logic_compare'),\n    new XmlBlock('logic_operation'),\n    new XmlBlock('logic_negate'),\n    new XmlBlock('logic_boolean'),\n    new XmlBlock('logic_null'),\n    new XmlBlock('logic_ternary'),\n]);\n\nexport const LOOP_CATEGORY: Category = new Category('Loops', '%{BKY_LOOPS_HUE}', [\n    new XmlBlock('controls_repeat_ext'),\n    new XmlBlock('controls_whileUntil'),\n    new XmlBlock('controls_for'),\n    new XmlBlock('controls_forEach'),\n    new XmlBlock('controls_flow_statements'),\n    new XmlBlock('controls_flow_statements')\n]);\n\n\nexport const MATH_CATEGORY: Category = new Category('Math', '%{BKY_MATH_HUE}', [\n    new XmlBlock('math_number'),\n    new XmlBlock('math_arithmetic'),\n    new XmlBlock('math_single'),\n    new XmlBlock('math_trig'),\n    new XmlBlock('math_constant'),\n    new XmlBlock('math_number_property'),\n    new XmlBlock('math_round'),\n    new XmlBlock('math_on_list'),\n    new XmlBlock('math_modulo'),\n    new XmlBlock('math_constrain'),\n    new XmlBlock('math_random_int'),\n    new XmlBlock('math_random_float'),\n    new XmlBlock('math_atan2')\n]);\n\nexport const TEXT_CATEGORY: Category = new Category('Text', '%{BKY_TEXTS_HUE}', [\n    new XmlBlock('text'),\n    new XmlBlock('text_join'),\n    new XmlBlock('text_append'),\n    new XmlBlock('text_length'),\n    new XmlBlock('text_isEmpty'),\n    new XmlBlock('text_indexOf'),\n    new XmlBlock('text_charAt'),\n    new XmlBlock('text_getSubstring'),\n    new XmlBlock('text_changeCase'),\n    new XmlBlock('text_trim'),\n    new XmlBlock('text_print'),\n    new XmlBlock('text_prompt_ext')\n]);\n\nexport const LISTS_CATEGORY: Category = new Category('Lists', '%{BKY_LISTS_HUE}', [\n    new XmlBlock('lists_create_with'),\n    new XmlBlock('lists_create_with'),\n    new XmlBlock('lists_repeat'),\n    new XmlBlock('lists_length'),\n    new XmlBlock('lists_isEmpty'),\n    new XmlBlock('lists_indexOf'),\n    new XmlBlock('lists_getIndex'),\n    new XmlBlock('lists_setIndex'),\n    new XmlBlock('lists_getSublist'),\n    new XmlBlock('lists_split'),\n    new XmlBlock('lists_sort'),\n]);\n\nexport const COLOUR_CATEGORY: Category = new Category('Colours', '%{BKY_COLOUR_HUE}', [\n    new XmlBlock('colour_picker'),\n    new XmlBlock('colour_random'),\n    new XmlBlock('colour_random'),\n    new XmlBlock('colour_blend')\n]);\n\nexport const VARIABLES_CATEGORY: Category = new Category('Variables', '%{BKY_VARIABLES_HUE}', [], [], 'VARIABLE');\n\nexport const FUNCTIONS_CATEGORY: Category = new Category('Functions', '%{BKY_PROCEDURES_HUE}', [], [], 'PROCEDURE');\n\n@Injectable()\nexport class NgxToolboxBuilderService {\n\n    private _nodes: Node[];\n\n    public build(): string {\n        let xml = '<xml id=\"toolbox\" style=\"display: none\">';\n        if (this._nodes) {\n            for (const node of this._nodes) {\n                xml += node.toXML();\n            }\n        }\n        xml += '</xml>';\n        return xml;\n    }\n\n    get nodes(): Node[] {\n        return this._nodes;\n    }\n\n    set nodes(value: Node[]) {\n        this._nodes = value;\n    }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { NgxBlocklyComponent } from './ngx-blockly/ngx-blockly.component';\nimport { NgxToolboxBuilderService } from './ngx-blockly/services/ngx-toolbox-builder.service';\n\n@NgModule({\n    declarations: [NgxBlocklyComponent],\n    imports: [],\n    exports: [NgxBlocklyComponent],\n    providers: [NgxToolboxBuilderService],\n    schemas: [NO_ERRORS_SCHEMA]\n})\nexport class NgxBlocklyModule {\n}\n"]}